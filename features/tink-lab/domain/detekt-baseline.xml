<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>FinalNewline:CreateLabKeyUseCase.kt$io.gromif.tink_lab.domain.usecase.CreateLabKeyUseCase.kt</ID>
    <ID>FinalNewline:DataType.kt$io.gromif.tink_lab.domain.model.DataType.kt</ID>
    <ID>FinalNewline:DecryptTextUseCase.kt$io.gromif.tink_lab.domain.usecase.DecryptTextUseCase.kt</ID>
    <ID>FinalNewline:EncryptTextUseCase.kt$io.gromif.tink_lab.domain.usecase.EncryptTextUseCase.kt</ID>
    <ID>FinalNewline:EncryptionException.kt$io.gromif.tink_lab.domain.model.EncryptionException.kt</ID>
    <ID>FinalNewline:EncryptionResult.kt$io.gromif.tink_lab.domain.model.EncryptionResult.kt</ID>
    <ID>FinalNewline:GetFileAeadListUseCase.kt$io.gromif.tink_lab.domain.usecase.GetFileAeadListUseCase.kt</ID>
    <ID>FinalNewline:GetTextAeadListUseCase.kt$io.gromif.tink_lab.domain.usecase.GetTextAeadListUseCase.kt</ID>
    <ID>FinalNewline:Key.kt$io.gromif.tink_lab.domain.model.Key.kt</ID>
    <ID>FinalNewline:KeyGenerator.kt$io.gromif.tink_lab.domain.util.KeyGenerator.kt</ID>
    <ID>FinalNewline:KeyReader.kt$io.gromif.tink_lab.domain.util.KeyReader.kt</ID>
    <ID>FinalNewline:KeyWriter.kt$io.gromif.tink_lab.domain.util.KeyWriter.kt</ID>
    <ID>FinalNewline:LoadKeyUseCase.kt$io.gromif.tink_lab.domain.usecase.LoadKeyUseCase.kt</ID>
    <ID>FinalNewline:ParseKeysetUseCase.kt$io.gromif.tink_lab.domain.usecase.ParseKeysetUseCase.kt</ID>
    <ID>FinalNewline:Repository.kt$io.gromif.tink_lab.domain.model.Repository.kt</ID>
    <ID>FinalNewline:SaveKeyUseCase.kt$io.gromif.tink_lab.domain.usecase.SaveKeyUseCase.kt</ID>
    <ID>FunctionReturnTypeSpacing:Repository.kt$Repository$fun createKey(dataType: DataType, aeadType: String) : Key</ID>
    <ID>FunctionReturnTypeSpacing:Repository.kt$Repository$fun getFileAeadList() : List&lt;String&gt;</ID>
    <ID>FunctionReturnTypeSpacing:Repository.kt$Repository$fun getTextAeadList() : List&lt;String&gt;</ID>
    <ID>NewLineAtEndOfFile:CreateLabKeyUseCase.kt$io.gromif.tink_lab.domain.usecase.CreateLabKeyUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:DataType.kt$io.gromif.tink_lab.domain.model.DataType.kt</ID>
    <ID>NewLineAtEndOfFile:DecryptTextUseCase.kt$io.gromif.tink_lab.domain.usecase.DecryptTextUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:EncryptTextUseCase.kt$io.gromif.tink_lab.domain.usecase.EncryptTextUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:EncryptionException.kt$io.gromif.tink_lab.domain.model.EncryptionException.kt</ID>
    <ID>NewLineAtEndOfFile:EncryptionResult.kt$io.gromif.tink_lab.domain.model.EncryptionResult.kt</ID>
    <ID>NewLineAtEndOfFile:GetFileAeadListUseCase.kt$io.gromif.tink_lab.domain.usecase.GetFileAeadListUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:GetTextAeadListUseCase.kt$io.gromif.tink_lab.domain.usecase.GetTextAeadListUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:Key.kt$io.gromif.tink_lab.domain.model.Key.kt</ID>
    <ID>NewLineAtEndOfFile:KeyGenerator.kt$io.gromif.tink_lab.domain.util.KeyGenerator.kt</ID>
    <ID>NewLineAtEndOfFile:KeyReader.kt$io.gromif.tink_lab.domain.util.KeyReader.kt</ID>
    <ID>NewLineAtEndOfFile:KeyWriter.kt$io.gromif.tink_lab.domain.util.KeyWriter.kt</ID>
    <ID>NewLineAtEndOfFile:LoadKeyUseCase.kt$io.gromif.tink_lab.domain.usecase.LoadKeyUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:ParseKeysetUseCase.kt$io.gromif.tink_lab.domain.usecase.ParseKeysetUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:Repository.kt$io.gromif.tink_lab.domain.model.Repository.kt</ID>
    <ID>NewLineAtEndOfFile:SaveKeyUseCase.kt$io.gromif.tink_lab.domain.usecase.SaveKeyUseCase.kt</ID>
    <ID>NoBlankLineBeforeRbrace:AeadTextService.kt$AeadTextService$ </ID>
    <ID>NoBlankLineBeforeRbrace:CreateLabKeyUseCase.kt$CreateLabKeyUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:DecryptTextUseCase.kt$DecryptTextUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:EncryptTextUseCase.kt$EncryptTextUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:EncryptionException.kt$EncryptionException$ </ID>
    <ID>NoBlankLineBeforeRbrace:EncryptionResult.kt$EncryptionResult$ </ID>
    <ID>NoBlankLineBeforeRbrace:GetFileAeadListUseCase.kt$GetFileAeadListUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:GetTextAeadListUseCase.kt$GetTextAeadListUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:KeyGenerator.kt$KeyGenerator$ </ID>
    <ID>NoBlankLineBeforeRbrace:KeyReader.kt$KeyReader$ </ID>
    <ID>NoBlankLineBeforeRbrace:KeyReader.kt$KeyReader.Result$ </ID>
    <ID>NoBlankLineBeforeRbrace:KeyWriter.kt$KeyWriter$ </ID>
    <ID>NoBlankLineBeforeRbrace:LoadKeyUseCase.kt$LoadKeyUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:ParseKeysetUseCase.kt$ParseKeysetUseCase$ </ID>
    <ID>NoBlankLineBeforeRbrace:Repository.kt$Repository$ </ID>
    <ID>NoBlankLineBeforeRbrace:SaveKeyUseCase.kt$SaveKeyUseCase$ </ID>
    <ID>PackageName:AeadTextService.kt$package io.gromif.tink_lab.domain.service</ID>
    <ID>PackageName:CreateLabKeyUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:DataType.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageName:DecryptTextUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:EncryptTextUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:EncryptionException.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageName:EncryptionResult.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageName:GetFileAeadListUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:GetTextAeadListUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:Key.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageName:KeyGenerator.kt$package io.gromif.tink_lab.domain.util</ID>
    <ID>PackageName:KeyReader.kt$package io.gromif.tink_lab.domain.util</ID>
    <ID>PackageName:KeyWriter.kt$package io.gromif.tink_lab.domain.util</ID>
    <ID>PackageName:LoadKeyUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:ParseKeysetUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageName:Repository.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageName:SaveKeyUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:AeadTextService.kt$package io.gromif.tink_lab.domain.service</ID>
    <ID>PackageNaming:CreateLabKeyUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:DataType.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageNaming:DecryptTextUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:EncryptTextUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:EncryptionException.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageNaming:EncryptionResult.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageNaming:GetFileAeadListUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:GetTextAeadListUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:Key.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageNaming:KeyGenerator.kt$package io.gromif.tink_lab.domain.util</ID>
    <ID>PackageNaming:KeyReader.kt$package io.gromif.tink_lab.domain.util</ID>
    <ID>PackageNaming:KeyWriter.kt$package io.gromif.tink_lab.domain.util</ID>
    <ID>PackageNaming:LoadKeyUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:ParseKeysetUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>PackageNaming:Repository.kt$package io.gromif.tink_lab.domain.model</ID>
    <ID>PackageNaming:SaveKeyUseCase.kt$package io.gromif.tink_lab.domain.usecase</ID>
    <ID>SpacingAroundColon:EncryptionException.kt$EncryptionException$:</ID>
    <ID>SpacingAroundColon:EncryptionException.kt$EncryptionException.DecryptionFailed$:</ID>
    <ID>SpacingAroundColon:EncryptionException.kt$EncryptionException.EncryptionFailed$:</ID>
    <ID>SpacingAroundColon:EncryptionException.kt$EncryptionException.NoValidKeyset$:</ID>
    <ID>SpacingAroundColon:EncryptionResult.kt$EncryptionResult.Error$:</ID>
    <ID>SpacingAroundColon:EncryptionResult.kt$EncryptionResult.Success$:</ID>
    <ID>SpacingAroundColon:Repository.kt$Repository$:</ID>
    <ID>UnusedPrivateMember:EncryptionException.kt$EncryptionException.NoValidKeyset$private fun readResolve(): Any</ID>
  </CurrentIssues>
</SmellBaseline>
